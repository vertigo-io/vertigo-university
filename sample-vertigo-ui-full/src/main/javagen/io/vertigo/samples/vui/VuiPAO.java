package io.vertigo.samples.vui;

import javax.inject.Inject;

import io.vertigo.core.node.Node;
import io.vertigo.core.lang.Assertion;
import io.vertigo.core.lang.Generated;
import io.vertigo.datamodel.task.TaskManager;
import io.vertigo.datamodel.task.definitions.TaskDefinition;
import io.vertigo.datamodel.task.model.Task;
import io.vertigo.datamodel.task.model.TaskBuilder;
import io.vertigo.datastore.impl.dao.StoreServices;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
 @Generated
public final class VuiPAO implements StoreServices {
	private final TaskManager taskManager;

	/**
	 * Constructeur.
	 * @param taskManager Manager des Task
	 */
	@Inject
	public VuiPAO(final TaskManager taskManager) {
		Assertion.check().isNotNull(taskManager);
		//-----
		this.taskManager = taskManager;
	}

	/**
	 * Creates a taskBuilder.
	 * @param name  the name of the task
	 * @return the builder 
	 */
	private static TaskBuilder createTaskBuilder(final String name) {
		final TaskDefinition taskDefinition = Node.getNode().getDefinitionSpace().resolve(name, TaskDefinition.class);
		return Task.builder(taskDefinition);
	}

	/**
	 * Execute la tache TkGetActorsIdsByMovie.
	 * @param movId Long
	 * @return List de Long actors
	*/
	@io.vertigo.datamodel.task.proxy.TaskAnnotation(
			name = "TkGetActorsIdsByMovie",
			request = "select act.act_id \n" + 
 " 			from role rol\n" + 
 " 			join actor act on rol.act_id= act.act_id \n" + 
 " 			join movie mov on rol.mov_id = mov.mov_id \n" + 
 " 			where mov.mov_id = #movId#",
			taskEngineClass = io.vertigo.basics.task.TaskEngineSelect.class)
	@io.vertigo.datamodel.task.proxy.TaskOutput(smartType = "STyId")
	public java.util.List<Long> getActorsIdsByMovie(@io.vertigo.datamodel.task.proxy.TaskInput(name = "movId", smartType = "STyId") final Long movId) {
		final Task task = createTaskBuilder("TkGetActorsIdsByMovie")
				.addValue("movId", movId)
				.build();
		return getTaskManager()
				.execute(task)
				.getResult();
	}

	/**
	 * Execute la tache TkLoadMovieIndex.
	 * @param movieIds List de Long
	 * @return DtList de MovieIndex dtcIndex
	*/
	@io.vertigo.datamodel.task.proxy.TaskAnnotation(
			name = "TkLoadMovieIndex",
			request = "select MOV_ID, mov.NAME, YEAR, cou.NAME as COUNTRY\n" + 
 " 				from MOVIE mov\n" + 
 " 				join COUNTRY cou on cou.cou_id = mov.cou_id\n" + 
 " 				where MOV_ID in (#movieIds.rownum#);",
			taskEngineClass = io.vertigo.basics.task.TaskEngineSelect.class)
	@io.vertigo.datamodel.task.proxy.TaskOutput(smartType = "STyDtMovieIndex")
	public io.vertigo.datamodel.structure.model.DtList<io.vertigo.samples.vui.domain.MovieIndex> loadMovieIndex(@io.vertigo.datamodel.task.proxy.TaskInput(name = "movieIds", smartType = "STyId") final java.util.List<Long> movieIds) {
		final Task task = createTaskBuilder("TkLoadMovieIndex")
				.addValue("movieIds", movieIds)
				.build();
		return getTaskManager()
				.execute(task)
				.getResult();
	}

	private TaskManager getTaskManager() {
		return taskManager;
	}
}
